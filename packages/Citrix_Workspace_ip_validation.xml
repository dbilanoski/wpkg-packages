<?xml version="1.0" encoding="UTF-8"?>

<packages:packages
	xmlns:packages="http://www.wpkg.org/packages" xmlns:wpkg="http://www.wpkg.org/wpkg" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.wpkg.org/packages ../xsd/packages.xsd" >

	<package
		id="citrix-workspace-ltsr"
		name="Citrix Workspace LTSR"
		revision="%SYS_VERSION%"
		reboot="false"
		priority="30">

		<!-- 
			This package relies on ip address validation script here: https://github.com/dbilanoski/wpkg-packages/blob/main/assets/wpkg_ip_validator.ps1

			Script logic:
				* Script will check if you current IP address is in the range of you internal supernet
					* if yes, it will exit with 500 (means user is on internal network)
					* if no, it will exit with 501 (means users is not on internal network)

			WPKG package logic:
				* If user is on RAVPN, package will be downloaded from %DL_LINK_*% then installed (validation script returned 501) 
				* If user is on internal network, package will install from local file server (validation script returned 500)
			
			NOTE 
				* Since the <condition> tag only affects the direct parent tag, not the whole nested stack, using conditioned download under install (install > download > condition ) is not preferable as it returns error
			 	* This is why in this approach we have download performed under install tag

			TODO:
				* (New-Object System.Net.WebClient).DownloadFile($url, $path_to_file)
				- for testing later, it performs better and might be better supported
		-->

		<!-- COFIGURATION VARIABLES -->
		<variable name="PKG_VERSION" value="22.3.1.41" />
		<variable name="SYS_VERSION" value="%PKG_VERSION%" />
		<variable name="IP_VALIDATION_SCRIPT" value="%SOFTWARE%\scripts\ip_validator.ps1" />
		<variable name="DL_SOURCE1" value="https://your-download-link/CitrixWorkspaceApp.exe" /> 
		<variable name="DL_TARGET1" value="C:\Users\Public\Downloads\CitrixWorkspaceApp_%PKG_VERSION%.exe" />
				
		<!-- VALIDATION -->
		<check type="uninstall" condition="versiongreaterorequal" path="Citrix Workspace .+" value="%SYS_VERSION%" />

		<!-- INSTALLATION -->
		<!-- Dowload from internet in case machine is off-site and file not already downloaded -->
		<install cmd='C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -ExecutionPolicy Bypass -command "&#038; Invoke-WebRequest -Uri %DL_SOURCE1% -OutFile %DL_TARGET1%"'>
			<condition>
				<check type="logical" condition="and" >
					<check type="execute" path="C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -executionpolicy bypass -File %IP_VALIDATION_SCRIPT%" condition="exitcodeequalto" value="501" />
					<check type="logical" condition="not" >
						<check type="file" condition="exists" path="%DL_TARGET1%" />
					</check>
				</check>
			</condition>
		</install>

		<!-- End current related processes -->
		<install cmd='%COMSPEC% /c taskkill /F /IM AuthManSvr.exe /IM Receiver.exe /IM SelfService.exe /IM SelfServicePlugin.exe /T' >
			<exit code="any" />
		</install>

		<!-- If download was successfull (workstation is not on-site) or file was already there, install from it -->
		<install cmd='%DL_TARGET1% /silent /forceinstall /AutoUpdateCheck=disabled /EnableCEIP=false'>
			<condition>
				<check type="logical" condition="or" >
					<check type="file" condition="exists" path="%DL_TARGET1%" />
					<check type="execute" path="C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -executionpolicy bypass -File %IP_VALIDATION_SCRIPT%" condition="exitcodeequalto" value="501" />
				</check>
			</condition>
			<exit code="0" />
			<exit code="40008" />
		</install>
		
		<!-- If download was not successfull (workstation is on-site), install from internal file server -->
		<install cmd='%SOFTWARE%\CitrixWorkspace\LTSR\%SYS_VERSION%\CitrixWorkspaceApp.exe /silent /forceinstall /AutoUpdateCheck=disabled /EnableCEIP=false'>
			<condition>
				<check type="logical" condition="and" >
					<check type="execute" path="C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -executionpolicy bypass -File %IP_VALIDATION_SCRIPT%" condition="exitcodeequalto" value="500" />
					<check type="logical" condition="not" >
						<check type="file" condition="exists" path="%DL_TARGET1%" />
					</check>
				</check>
			</condition>
			<exit code="0" />
			<exit code="40008" />
		</install>
		
		<!-- UPGRADE -->
		<upgrade include="install" />

		<!-- DOWNGRADE -->
		<downgrade include="remove" />
		<downgrade include="install" />

		<!-- DEINSTALL -->
		<!-- End current related processes -->
		<remove cmd='%COMSPEC% /c taskkill /F /IM AuthManSvr.exe /T' >
			<exit code="any" />
		</remove>
		
		<!-- As we had a mix of version office wide, few different version we are targeting here -->
		<remove cmd='"C:\ProgramData\Citrix\Citrix WorkSpace 2010\TrolleyExpress.exe" /uninstall /silent /cleanup'>
			<condition>
					<check type="uninstall" condition="exists" path="Citrix Workspace 2010" />
				</condition>
		</remove>

		<remove cmd='"C:\Program Files (x86)\Citrix\Citrix WorkSpace 2105\TrolleyExpress.exe" /uninstall /silent /cleanup'>
			<condition>
					<check type="uninstall" condition="exists" path="Citrix Workspace 2105" />
				</condition>
		</remove>
		
		<remove cmd='"C:\Program Files (x86)\Citrix\Citrix WorkSpace 2202\TrolleyExpress.exe" /uninstall /silent /cleanup'>
			<condition>
					<check type="uninstall" condition="exists" path="Citrix Workspace 2202" />
				</condition>
		</remove>

		<remove cmd='"C:\Program Files (x86)\Citrix\Citrix WorkSpace 2203\TrolleyExpress.exe" /uninstall /silent /cleanup'>
			<condition>
					<check type="uninstall" condition="exists" path="Citrix Workspace 2203" />
				</condition>
		</remove>

		<!-- Download cleanup -->
		<remove cmd='%COMSPEC% /C DEL /Q /F "%DL_TARGET1%"'>
			<condition>
				<check type="file" condition="exists" path="%DL_TARGET1%" />
			</condition>
		</remove>
 
	</package>
	
</packages:packages>